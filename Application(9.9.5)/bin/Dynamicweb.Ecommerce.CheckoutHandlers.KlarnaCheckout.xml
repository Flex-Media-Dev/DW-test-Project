<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout">
            <summary>
            Klarna Checkout Handler
            </summary>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.StartCheckout(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Starts order checkout procedure
            </summary>
            <param name="order">Order to be checked out</param>
            <returns>String representation of template output</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.Redirect(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Redirects user to payment step or canceled order step
            </summary>
            <param name="order">Order for processing</param>
            <returns>String representation of template output</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.Capture(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Send capture request to transaction service
            </summary>
            <param name="order">Order to be captured</param>
            <returns>Response from transaction service</returns>
            <remarks>https://developers.klarna.com/en/manage-orders/activate-an-order</remarks>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.CheckOrderStatus(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Gets order gateway payment status
            </summary>
            <param name="order">Order that needs to update payment status</param>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.CancelOrder(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Cancels order reservation
            </summary>
            <param name="order">Order that needs to be canceled</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.ChangeOrder(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Updates modified order on Klarna server
            </summary>
            <param name="order">Order to be updated</param>
            <returns>True if operation succeeded</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.AmountRefund(Dynamicweb.Ecommerce.Orders.Order,Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Refunds order
            </summary>
            <param name="order">Modified order</param>
            <param name="originalOrder">Original order</param>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.PartialReturn(Dynamicweb.Ecommerce.Orders.Order,Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Performs partial return of order
            </summary>
            <param name="order">Modified order</param>
            <param name="originalOrder">Original order</param>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.FullReturn(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Performs full return of order
            </summary>
            <param name="order">Order that needs to be return</param>
        </member>
        <member name="T:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.CartItem">
            <summary>
            Represents helper class for getting cart items information
            </summary>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaCheckout.CartItem.GetCartItems(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Gets cart items based on order data
            </summary>
            <param name="order">Order instance</param>
            <returns>Set of CartItems</returns>
        </member>
        <member name="T:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice">
            <summary>
            Klarna invoice and part payment Handler
            </summary>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.StartCheckout(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Starts order checkout procedure
            </summary>
            <param name="order">Order to be checked out</param>
            <returns>String representation of template output</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.Redirect(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Redirects user to buy, payment, cancel or get address step
            </summary>
            <param name="order">Order for processing</param>
            <returns>String representation of template output</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.FireAction(System.String,System.String[])">
            <summary>
            Fires action
            </summary>
            <param name="action">Fetch or clear action</param>
            <param name="args">not used</param>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.SupportedActions">
            <summary>
            Retrieves key-value pairs of supported actions data
            </summary>
            <returns>Key-value pairs of actions and their translated names</returns>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.Capture(Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Send capture request to transaction service
            </summary>
            <param name="order">Order to be captured</param>
            <returns>Response from transaction service</returns>
            <remarks>https://developers.klarna.com/en/manage-orders/activate-an-order</remarks>
        </member>
        <member name="M:Dynamicweb.Ecommerce.CheckoutHandlers.KlarnaCheckout.KlarnaInvoice.InitializeOrder(Klarna.Api.Api,Dynamicweb.Ecommerce.Orders.Order)">
            <summary>
            Initialize order object with values
            </summary>
            <param name="api">klarna api instance, that provides chechout methods</param>
            <param name="order">Oredr instance</param>
        </member>
    </members>
</doc>

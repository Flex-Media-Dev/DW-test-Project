<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RazorEngine.Roslyn</name>
    </assembly>
    <members>
        <member name="T:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService">
            <summary>
            A concrete <see cref="T:RazorEngine.Compilation.ICompilerService"/> implementation for C# by using the Roslyn compiler.
            </summary>
        </member>
        <member name="F:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService._codeDomProvider">
            <summary>
            We need a CodeDom instance as pre Razor4 uses CodeDom 
            internally and we need to generate the source code file...
            </summary>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.#ctor(System.Boolean,System.Func{System.Web.Razor.Parser.ParserBase})">
            <summary>
            Creates a new CSharpRoslynCompilerService instance.
            </summary>
            <param name="strictMode"></param>
            <param name="markupParserFactory"></param>
        </member>
        <member name="P:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.SourceFileExtension">
            <summary>
            Returns "cs".
            </summary>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.InspectSource(System.Web.Razor.GeneratorResults,RazorEngine.Compilation.TypeContext)">
            <summary>
            Inspects the GeneratorResults and returns the source code.
            </summary>
            <param name="results"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.BuildTypeName(System.Type,System.Type)">
            <summary>
            Build a C# typename.
            </summary>
            <param name="templateType"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.GetSyntaxTree(System.String,System.String)">
            <summary>
            Creates a CSharpSyntaxTree instance.
            </summary>
            <param name="sourceCode"></param>
            <param name="sourceCodePath"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.GetEmptyCompilation(System.String)">
            <summary>
            Creates a CSharpCompilation instance
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.CreateOptions(RazorEngine.Compilation.TypeContext)">
            <summary>
            Creates a CSharpCompilationOptions instance.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.CSharpRoslynCompilerService.IncludeReferences">
            <summary>
            Returns a set of assemblies that must be referenced by the compiled template.
            </summary>
            <returns>The set of assemblies.</returns>
        </member>
        <member name="T:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase">
            <summary>
            Base compiler service class for roslyn compilers
            </summary>
        </member>
        <member name="T:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver">
            <summary>
            Required for #line pragmas
            </summary>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.#ctor(System.String)">
            <summary>
            Constructs a new RazorEngineSourceReferenceResolver instance.
            </summary>
            <param name="sourceCodeFile"></param>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.Equals(System.Object)">
            <summary>
            Checkts if the current instance equals the given instance.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.GetHashCode">
            <summary>
            Calculates a hashcode for the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.NormalizePath(System.String,System.String)">
            <summary>
            Normalize a path
            </summary>
            <param name="path"></param>
            <param name="baseFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.OpenRead(System.String)">
            <summary>
            Open a path for reading
            </summary>
            <param name="resolvedPath"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.RazorEngineSourceReferenceResolver.ResolveReference(System.String,System.String)">
            <summary>
            Resolve a reference.
            </summary>
            <param name="path"></param>
            <param name="baseFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.#ctor(System.Web.Razor.RazorCodeLanguage,System.Func{System.Web.Razor.Parser.ParserBase})">
            <summary>
            Creates a new instance of the <see cref="T:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase"/> class.
            </summary>
            <param name="codeLanguage"></param>
            <param name="markupParserFactory"></param>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.GetEmptyCompilation(System.String)">
            <summary>
            Get a new empty compilation instance from the concrete implementation.
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.GetSyntaxTree(System.String,System.String)">
            <summary>
            Gets a SyntaxTree from the given source code.
            </summary>
            <param name="sourceCode"></param>
            <param name="sourceCodeFile"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.CreateOptions(RazorEngine.Compilation.TypeContext)">
            <summary>
            Create a empty CompilationOptions with the given namespace usings.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.IsMono">
            <summary>
            Check for mono runtime as Roslyn doesn't support generating debug symbols on mono/unix
            </summary>
            <returns></returns>
        </member>
        <member name="M:RazorEngine.Roslyn.CSharp.RoslynCompilerServiceBase.CompileType(RazorEngine.Compilation.TypeContext)">
            <summary>
            Configures and runs the compiler.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:RazorEngine.Roslyn.RoslynCompilerServiceFactory">
            <summary>
            Provides a implementation of <see cref="T:RazorEngine.Compilation.ICompilerServiceFactory"/> for the Roslyn implementation.
            </summary>
        </member>
        <member name="M:RazorEngine.Roslyn.RoslynCompilerServiceFactory.CreateCompilerService(RazorEngine.Language)">
            <summary>
            Creates a <see cref="T:RazorEngine.Compilation.ICompilerService"/> that supports the specified language.
            </summary>
            <param name="language">The <see cref="T:RazorEngine.Language"/>.</param>
            <returns>An instance of <see cref="T:RazorEngine.Compilation.ICompilerService"/>.</returns>
        </member>
    </members>
</doc>
